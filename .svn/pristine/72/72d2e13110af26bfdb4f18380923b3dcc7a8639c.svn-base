/**
 * 和表格相关的操作 , 增、删、改、查、取行数据、
 */
// 创建表格
function _Grid(option) {
	if (option.url === undefined || option.columns === undefined) {
		return;
	}
	debugger;
	// 要查询 第几页
	var currentPage = 1;
	// 每页多少条
	var pageSize = 7;
	var temp = $("#" + option.gridId + "_cur_page").text();
	if (Number($("#" + option.gridId + "_cur_page").text()) > 0) {
		currentPage = $("#" + option.gridId + "_cur_page").text();
	}
	var temp1 = $("#" + option.gridId + "_page_select").text();
	if (Number($("#" + option.gridId + "_page_select").text()) > 0) {
		pageSize = $("#" + option.gridId + "_page_select").text();
	}
	var formData = [];
	if (option.fromId != undefined) {
		// form 转 json
		var formData = $("#" + option.fromId).serializeObject();
	}
	// 去掉 .action 后缀
	option.url = option.url.replace(".action", "");
	$.ajax({
				url : option.url + '/' + currentPage + '/' + pageSize
						+ ".action",
				type : 'POST',
				contentType : 'application/json',
				data : formData,
				dataType : 'json',
				success : function(da, type) {
					debugger;
					$("#"+option.id).empty();
					var data
					if (da.resultList != undefined) {
						data = da.resultList;
					} else {
						data = da;
					}
					// 创建表
					var table = document.createElement("table");
					table.className = "_table";
					table.style.border = "solid 1px";
					table.id = option.gridId;
					var trh = document.createElement("tr");
					var k = option.columns.length;
					for (var i = 0; i < k; i++) { // 表头
						// 添加 一个序号行
						if (i == 0) {
							var squence = document.createElement("th");
							squence.className = "_table_th";
							squence.innerHTML = "序号";
							trh.appendChild(squence);
						}
						var th = document.createElement("th");
						th.className = "_table_th";
						var tem = option.columns[i].name;
						// 如果该列可编辑
						var editable = option.columns[i].editable;
						var select = option.columns[i].select;
						if (editable && editable == true) {
							// 可编辑
							th.innerHTML = tem + "(※)";
						} else if (select && select != null) {
							// 复选框
							th.innerHTML = "";
						} else {
							// 普通值
							th.innerHTML = tem;
						}
						trh.appendChild(th);
						table.appendChild(trh);
					}
					var size = data.length;
					for (var i = 0; i < size; i++) {// 表中数据
						var tr = document.createElement("tr");
						// 序列
						var sq = document.createElement("td");
						sq.className = "_table_td";
						sq.innerHTML = i;
						tr.appendChild(sq);
						tr.className = "_table_tr";
						for (var j = 0; j < k; j++) {
							var td = document.createElement("td");
							td.className = "_table_td";
							var select = option.columns[j].select;
							if (select && select != null) {
								// 复选框
								td.innerHTML = "<input class='_select' type='checkbox'/>";
							} else {
								// 非复选框
								var field = option.columns[j].field;
								var width = option.columns[j].width;
								td.width = width + 'px';
								// 插入数据
								if (data[i][field] != undefined) {
									td.innerHTML = data[i][field];
								}
								var editable = option.columns[j].editable;
								// 是否可以编辑
								if (editable && editable == true) {
									td.className = td.className + " _edit";
								}
							}
							tr.appendChild(td);
						}
						table.appendChild(tr);
					}
					var tb = document.getElementById(option.id);
					tb.appendChild(table);
					// -----------------添加分页标签-------------------------------
					var page = da.page;
					var div = document.createElement("div");
					div.id = option.gridId + "_page";
					var papeText = "<input id='"
							+ option.gridId
							+ "_first' type='button' value='首页' class='_btn'> <input id='"
							+ option.gridId
							+ "_prev' type='button' value='上一页' class='_btn'> "
							+ "<input id='"
							+ option.gridId
							+ "_next' type='button' value='下一页' class='_btn'> <input id='"
							+ option.gridId
							+ "_last' type='button' value='尾页' class='_btn'>"
							+ "转至第<input id='"
							+ option.gridId
							+ "_page_to' width='10' type='text'>页 <input type='button' value='go' class='_btn'> 当前第<span id='"
							+ option.gridId + "_cur_page'>1</span>页 ,"
							+ "每页<span id='" + option.gridId
							+ "_page_select'>7</span>条，共<span id="+option.gridId+"_total_page></span>页，共<span id='" + option.gridId
							+ "_total'></span>条";
					div.innerHTML = papeText;
					tb.appendChild(div);
					if (da.page != undefined) {
						var pageInfo = da.page;
						$("#" + option.gridId + "_cur_page").text(
								pageInfo.currentPage);
						$("#" + option.gridId + "_page_select").text(
								pageInfo.pageSize);
						$("#" + option.gridId + "_total").text(
								pageInfo.totalRecords);
						$("#" + option.gridId + "_total_page").text(
								pageInfo.totalPage);
					}
					// -----------------为 ._edit 绑定可编辑事件 -------------------
					$("._edit").bind("click", function() {
						_cellBindClick(this);
					});
					//------------------为页面绑定事件-----------------------------
					//跳到首页
					$("#"+option.gridId+"_first").bind("click",function(){
						_go_to_first_page(option);
					});
					//跳转到上一页
					$("#"+option.gridId+"_prev").bind("click",function(){
						_go_to_prev_page(option);
					});
					//跳转到下一页
					$("#"+option.gridId+"_next").bind("click",function(){
						_go_to_next_page(option);
					});
					//跳转到最后页
					$("#"+option.gridId+"_last").bind("click",function(){
						_go_to_last_page(option);
					});
				}
			});
}
//跳转到首页
function _go_to_first_page(option){
	//当前页 设置为 1
	$("#" + option.gridId + "_cur_page").text("1");
	//$("#" + option.gridId + "_pageSize").text();
	//重新加载表格
	_Grid(option);
}
//跳转到上一页
function _go_to_prev_page(option){
	//得到当前页
	var curp = Number ($("#" + option.gridId + "_cur_page").text());
	//如果当前页==1,则不变
	if(curp==1){
		curp=1;
	}else{
		curp = curp-1;
	}
	$("#" + option.gridId + "_cur_page").text(curp);
	//重新加载表格
	_Grid(option);
}
//跳转到下一页
function _go_to_next_page(option){
	debugger;
	//得到当前页
	var curp = Number ($("#" + option.gridId + "_cur_page").text());
	curp = curp+1;
	$("#" + option.gridId + "_cur_page").text(curp);
	//重新加载表格
	_Grid(option);
}
//跳到最后一页
function _go_to_last_page(option){
	debugger;
	//得到最后页
	var curp = $("#" + option.gridId + "_total_page").text();
	$("#" + option.gridId + "_cur_page").text(curp);
	//重新加载表格
	_Grid(option);
}
function _cellBindClick(content) {
	var tdObj = $(content);
	// 得到 行对象
	var trObj = tdObj.parent();
	// 获取 tr 对象的 class 值
	var trClass = trObj.attr("class");
	// 得到当前 值
	var oldText = tdObj.text();
	// 创建一个文本框
	var inputObj = $("<input type='text' value=" + oldText + ">");
	// 去掉文本框的边框
	inputObj.css("border-width", 0);
	inputObj.click(function() {
		return false;
	});
	// 设置文本框的宽度 与 td 的宽度相同
	inputObj.width(tdObj.width());
	inputObj.height(tdObj.height());
	// 去掉 文本框外边距
	inputObj.css("margin", 0);
	inputObj.css("padding", 0);
	inputObj.css("text-align", 'center');
	inputObj.css("font-size", "16px");
	// inputObj.css("background-color",tdObj.css("background-color"));
	// 把文本框放入td中
	tdObj.html(inputObj);
	// 文本框失去焦点时 变为文本
	inputObj.blur(function() {
		// 文本新内容
		var newText = inputObj.val();
		tdObj.html(newText);
		// 如果 文本内容 发生改变，且 不为新增的记录 添加 类属性 _update
		if (trClass.match("_add") == null && oldText != newText) {
			trObj.addClass("_update");
		}
	});
}
// 插入一条数据
function _insert(gridOption) {
	var culumns = gridOption.columns;
	var size = culumns.length;
	var tr = document.createElement("tr");
	tr.className = "_table_tr _add";
	for (var i = 0; i < size; i++) {
		if (i == 0) {
			// 序列行
			var squ = document.createElement("td");
			squ.className = "_table_td";
			squ.innerHTML = "+";
			tr.appendChild(squ);
		}
		var td = document.createElement("td");
		td.className = "_table_td";
		var editable = culumns[i].editable;
		var select = culumns[i].select;
		if (select && select != null) {
			// 复选框
			td.innerHTML = "<input class='_select' type='checkbox'/>";
		}
		// 是否可以编辑
		if (editable && editable == true) {
			td.className = td.className + " _edit";
		}
		tr.appendChild(td);
	}
	var table = document.getElementById(gridOption.gridId);
	table.appendChild(tr);
	// 为 ._edit 绑定可编辑事件
	$("._edit").bind("click", function() {
		_cellBindClick(this);
	});
}

// 添加 删除标记
function _markAsDelete(gridOption) {
	var select = $("#" + gridOption.gridId + " ._select");
	var length = select.length;
	for (var i = 0; i < length; i++) {
		var st = select.eq(i);
		var selected = st.prop('checked');
		if (selected == true) {
			// 如果 该行被选中，为该行 class 添加 "_del"
			var tr = st.parent().parent();
			var td = tr.children();
			td.addClass("_del");
			tr.addClass("_tr_del")
			st.attr("checked", false);
		}
	}
}
// 取消删除标记
function _removeDeleteMark(gridOption) {
	var select = $("#" + gridOption.gridId + " ._select");
	var length = select.length;
	for (var i = 0; i < length; i++) {
		var st = select.eq(i);
		var selected = st.prop('checked');
		if (selected == true) {
			// 如果 该行被选中，为该行 class 添加 "_del"
			var tr = st.parent().parent();
			var td = tr.children();
			tr.removeClass("_tr_del");
			td.removeClass("_del");
			st.attr("checked", false);
		}
	}
}
// 获取 所有新增的记录。class 中 有 _add,且 无 _tr_del,则为 新增的记录
function _getInsertedRecords(gridOption) {
	var culumns = gridOption.columns;
	var result = [];
	var select = $("#" + gridOption.gridId + " ._add");
	var length = select.length;
	for (var i = 0; i < length; i++) {
		// 按class 筛选数据
		var cla = select[i].className;
		var del = cla.match("_tr_del");
		if (del == null) {
			var record = select.eq(i).children();
			var size = record.length;
			var obj = {};
			for (var j = 1; j < size; j++) {
				// ----------------获取 值 ，，，后面或许会改----------------
				var text = record[j].innerHTML;
				var field = culumns[j - 1].field;
				if (field != undefined) {
					obj[field] = text;
				}
			}
			result.push(obj);
		}
		return result;
	}
}

// 获取所有的 修改的记录 。 class 中有 _update 无 _tr_del
function _getUpdatedRecords(gridOption) {
	var culumns = gridOption.columns;
	var result = [];
	var select = $("#" + gridOption.gridId + " ._update");
	var length = select.length;
	for (var i = 0; i < length; i++) {
		// 按class 筛选数据
		var cla = select[i].className;
		var del = cla.match("_tr_del");
		if (del == null) {
			var record = select.eq(i).children();
			var size = record.length;
			var obj = {};
			for (var j = 1; j < size; j++) {
				// ----------------获取 值 ，，，后面或许会改----------------
				var text = record[j].innerHTML;
				var field = culumns[j - 1].field;
				if (field != undefined) {
					obj[field] = text;
				}
			}
			result.push(obj);
		}
		return result;//_arrayToJson(result);
	}
}
// 获取所有的 删除的记录 。 class 中有_tr_del 无 _add
function _getDeletedRecords(gridOption) {
	var culumns = gridOption.columns;
	debugger;
	var result = [];
	var select = $("#" + gridOption.gridId + " ._tr_del");
	var length = select.length;
	for (var i = 0; i < length; i++) {
		// 按class 筛选数据
		var cla = select[i].className;
		var add = cla.match("_add");
		if (add == null) {
			var record = select.eq(i).children();
			var size = record.length;
			var obj = {};
			for (var j = 1; j < size; j++) {
				// ----------------获取 值 ，，，后面或许会改----------------
				var text = record[j].innerHTML;
				var field = culumns[j - 1].field;
				if (field != undefined) {
					obj[field] = text;
				}
			}
			result.push(obj);
		}
	}
	return result;//_arrayToJson(result);
}
//以GET方式获取数据
function _get(option){
	$.ajax({
		url : option.url,
		type : 'GET',
		contentType : 'application/json',
		data : option.data,
		dataType : 'json',
		success : function(value, type){
			option.success(value, type);
		}
	});
}

//以POST方式获取数据
function _post(option){
	$.ajax({
		url : option.url,
		type : 'POST',
		contentType : 'application/json',
		data : option.data,
		dataType : 'json',
		success : function(value, type){
			option.success(value, type);
		}
	});
}






