package ssm.controller.driverSchool;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import ssm.entity.common.RecordsO;
import ssm.entity.common.ResultO;
import ssm.entity.driverSchool.SchoolInstructorO;
import ssm.entity.driverSchool.SchoolO;
import ssm.entity.user.UserO;
import ssm.service.driverSchoolService.DriverSchoolService;
@Controller
@RequestMapping(value="/driverSchoolMsg")
public class DriverSchoolMsgAction {

	@Autowired
	DriverSchoolService driverSchoolService;
	/**
	 * 获取自己驾校信息
	 * liaoyun
	 * 2016/3/27
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/getDriverSchoolMsg",method=RequestMethod.POST,produces="application/json",
			consumes="application/json")
	public SchoolO getDriverSchoolMsg(HttpSession session){
		UserO user = (UserO) session.getAttribute("userInfo");
		String account="";
		if(user.getType()==4){//如果是驾校的职员
			account = user.getLeader();
		}else if(user.getType()==3){//如果是驾校的管理员
			account = user.getAccount();
		}
		if(account != null && !account.equals("")){
			SchoolO schO =driverSchoolService.getDriverSchoolMsg(account);
			schO.setRegisteredTime(schO.getRegisteredTime());
			return schO;
		}else{
			return null;
		}
		
	}
	
	/**
	 * 保存修改的驾校信息数据
	 * @author liaoyun
	 * 2016/3/27
	 * 
	 */
	@ResponseBody
	@RequestMapping(value="/modify",method=RequestMethod.POST,produces="application/json",
	consumes="application/json")
	public Map<String,String> save(@RequestBody SchoolO school,HttpSession session){
		Map<String,String> resultMap=new HashMap<>();
		UserO user =(UserO)session.getAttribute("userInfo");
		String account="";
		if(user.getType()==4){//如果是驾校的职员
			account = user.getLeader();
		}else if(user.getType()==3){//如果是驾校的管理员
			account = user.getAccount();
		}
		if(school!=null){
			school.setSchoolName(getValue(school.getSchoolName()));
			school.setTel(getValue(school.getTel()));
			school.setEmail(getValue(school.getEmail()));
			school.setLastUpdatedBy(user.getAccount());
		}
		driverSchoolService.saveSchoolMsg(school,account);
		return resultMap;
	}
	/**
	 * 查询 驾校 所属的 教练
	 * @param schoolInstructorO
	 * @param currentPage
	 * @param pageSize
	 * @param session
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/getDriverInstructor/{currentPage}/{pageSize}",method=RequestMethod.POST,produces="application/json",
	consumes="application/json")
	public ResultO<SchoolInstructorO> findDriverInstructor(@RequestBody SchoolInstructorO schoolInstructorO,@PathVariable int currentPage,
			@PathVariable int pageSize,HttpSession session){
		Map<String,String> resultMap=new HashMap<>();
		UserO user =(UserO)session.getAttribute("userInfo");
		String account="";
		if(user.getType()==4){//如果是驾校的职员
			account = user.getLeader();
		}else if(user.getType()==3){//如果是驾校的管理员
			account = user.getAccount();
		}
		ResultO<SchoolInstructorO> list = driverSchoolService.getDriverSchoolList(schoolInstructorO,currentPage,pageSize,account);
		return list;
	}
	/**
	 * 增、删、改 驾校的教练 liaoyun 2016-3-27
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/saveInstructor",method=RequestMethod.POST,produces="application/json",
	consumes="application/json")
	public Map<String,String> saveInstructor(@RequestBody RecordsO<SchoolInstructorO> recordsO,HttpSession session){
		Map<String,String> resultMap =new HashMap<>();
		UserO user =(UserO)session.getAttribute("userInfo");
		String account="";
		if(user.getType()==4){//如果是驾校的职员
			account = user.getLeader();
		}else if(user.getType()==3){//如果是驾校的管理员
			account = user.getAccount();
		}
		List<SchoolInstructorO> insertedRecords =recordsO.getInsertedRecords();
		List<SchoolInstructorO> uptatedRecords =recordsO.getUpdatedRecords();
		List<SchoolInstructorO> deletedRecords=recordsO.getDeletedRecords();
		
		//对新增的数据
		if(insertedRecords != null && insertedRecords.size() > 0){
			for (SchoolInstructorO s : insertedRecords) {
				s.setJobNumber(getValue(s.getJobNumber()));
				s.setName(getValue(s.getName()));
				s.setTel(getValue(s.getTel()));
				s.setEmail(getValue(s.getEmail()));
				s.setCreatedBy(user.getAccount());
				s.setLastUpdatedBy(user.getAccount());
			}
			driverSchoolService.insertSchoolInstructor(insertedRecords,account);
		}
		//对修改的数据
		if(uptatedRecords != null && uptatedRecords.size() > 0){
			for (SchoolInstructorO s : uptatedRecords) {
				s.setJobNumber(getValue(s.getJobNumber()));
				s.setName(getValue(s.getName()));
				s.setTel(getValue(s.getTel()));
				s.setEmail(getValue(s.getEmail()));
				s.setLastUpdatedBy(user.getAccount());
			}
			driverSchoolService.updateSchoolInstructor(uptatedRecords,account);
		}
		//对剔除的数据
		if(deletedRecords != null && deletedRecords.size() > 0){
			driverSchoolService.deleteSchoolInstructor(deletedRecords,account);
		}
		return resultMap;
	}
	//需要修改，适合任何类型
		private String getValue(String s){
			if(s==null||s.equals("")){
				return "";
			}
			return s.trim();
		}
}
